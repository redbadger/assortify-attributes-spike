### This file was generated by Nexus Schema
### Do not make changes to this file directly


input IntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int!]
}

input NestedIntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int!]
}

input NestedStringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

type Product {
  colorwayName: String!
  id: ID!
  ownId: Int!
  pc9: String!
}

input ProductWhereInput {
  AND: [ProductWhereInput!]
  NOT: [ProductWhereInput!]
  OR: [ProductWhereInput!]
  colorwayName: StringFilter
  id: IntFilter
  pc9: StringFilter
}

input ProductWhereUniqueInput {
  id: Int
}

type Query {
  product(where: ProductWhereUniqueInput!): Product
  products(after: ProductWhereUniqueInput, before: ProductWhereUniqueInput, first: Int, last: Int, where: ProductWhereInput): [Product!]!
}

enum QueryMode {
  default
  insensitive
}

input StringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}